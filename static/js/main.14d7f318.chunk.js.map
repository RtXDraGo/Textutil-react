{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","class","mode","href","title","type","id","role","onClick","toggle","style","color","for","placeholder","TextForm","useState","data","setData","head","rows","backgroundColor","value","onChange","e","target","toUpperCase","alert","toLowerCase","trim","text","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","arr","i","length","charAt","slice","txt","className","filter","n","Alerts","App","setMode","setAlert","showAlert","msg","cont","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oMAIe,SAASA,EAAOC,GAG3B,OACI,mCACI,qBAAKC,MAAK,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAArE,SACI,sBAAKD,MAAM,kBAAX,UACI,mBAAGA,MAAM,eAAeE,KAAK,IAA7B,SAAkCH,EAAMI,QACxC,wBAAQH,MAAM,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAxL,SACI,sBAAMJ,MAAM,0BAEhB,sBAAKA,MAAM,2BAA2BK,GAAG,yBAAzC,UACI,oBAAIL,MAAM,kCAAV,SACI,oBAAIA,MAAM,WAAV,SACI,mBAAGA,MAAM,kBAAkB,eAAa,OAAOE,KAAK,IAApD,sBAMR,sBAAKF,MAAM,yBAAX,UACI,uBAAOA,MAAM,mBAAmBI,KAAK,WAAWE,KAAK,SAASD,GAAG,yBAAyBE,QAASR,EAAMS,SACzG,uBAAOR,MAAM,mBAAmBS,MAAO,CAACC,MAAmB,SAAbX,EAAME,KAAc,QAAQ,SAAUU,IAAI,yBAAxF,SAA8H,QAAZZ,EAAME,KAAa,oBAAoB,wBAG7J,uBAAMD,MAAM,SAAZ,UACI,uBAAOA,MAAM,oBAAoBI,KAAK,SAASQ,YAAY,SAAS,aAAW,WAC/E,wBAAQZ,MAAM,0BAA0BI,KAAK,SAA7C,iCC7Bb,SAASS,EAASd,GAC7B,MAAwBe,mBAAS,wBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAqCA,OACI,qCACI,8BACI,sBAAKhB,MAAM,OAAOS,MAAO,CAACC,MAAmB,SAAbX,EAAME,KAAc,QAAQ,SAA5D,UACI,6BAAKF,EAAMkB,OACX,0BAAUjB,MAAM,eAAeK,GAAG,QAAQa,KAAK,KAAKT,MAAO,CAACU,gBAA6B,SAAbpB,EAAME,KAAc,OAAO,SAAUmB,MAAOL,EAAMM,SAAU,SAACC,GAAD,OAAON,EAAQM,EAAEC,OAAOH,UAChK,wBAAQhB,KAAK,SAASJ,MAAM,uBAAuBO,QA1CrD,WACVS,EAAQD,EAAKS,eACbzB,EAAM0B,MAAM,yBAAyB,YAwCzB,kCACA,wBAAQrB,KAAK,SAASJ,MAAM,uBAAuBO,QAvCrD,WACVS,EAAQD,EAAKW,eACb3B,EAAM0B,MAAM,yBAAyB,YAqCzB,kCACA,wBAAQrB,KAAK,SAASJ,MAAM,sBAAsBO,QApCpD,WACVS,EAAQ,IACRjB,EAAM0B,MAAM,kBAAkB,YAkClB,wBACA,wBAAQrB,KAAK,SAASJ,MAAM,uBAAuBO,QAjCtD,WACTS,EAAQD,EAAKY,QACb5B,EAAM0B,MAAM,iBAAiB,YA+BjB,uBACA,wBAAQrB,KAAK,SAASJ,MAAM,yBAAyBO,QA7BxD,WACT,IAAIqB,EAAOC,SAASC,eAAe,SACnCF,EAAKG,SACLC,UAAUC,UAAUC,UAAUN,EAAKR,OACnCrB,EAAM0B,MAAM,iBAAiB,YAyBjB,uBACA,wBAAQrB,KAAK,SAASJ,MAAM,oBAAoBO,QAxB5C,WAChB,IAAI4B,EAAUpB,EAAKqB,MAAM,QACzBpB,EAAQmB,EAAQE,KAAK,MACrBtC,EAAM0B,MAAM,yBAAyB,YAqBzB,0BACA,wBAAQrB,KAAK,SAASJ,MAAM,qBAAqBO,QApBlD,WAEX,IADA,IAAM+B,EAAMvB,EAAKqB,MAAM,KACdG,EAAI,EAAGA,EAAID,EAAIE,OAAQD,IAC5BD,EAAIC,GAAKD,EAAIC,GAAGE,OAAO,GAAGjB,cAAgBc,EAAIC,GAAGG,MAAM,EAAGJ,EAAIC,GAAGC,QACrE,IAAMG,EAAML,EAAID,KAAK,KACrBrB,EAAQ2B,GACR5C,EAAM0B,MAAM,iBAAiB,YAcjB,8BAGR,sBAAKmB,UAAU,iBAAiBnC,MAAO,CAACC,MAAmB,SAAbX,EAAME,KAAc,QAAQ,SAA1E,UACI,yDACA,oDAAuBc,EAAKyB,OAA5B,mBAAoDzB,EAAKqB,MAAM,KAAKS,QAAO,SAASC,GAAG,MAAU,IAAHA,KAAQN,OAAtG,YACA,kEAAmD,KAAdzB,EAAKyB,UAC1C,mDACA,4BAAKzB,EAAKyB,OAAS,EAAIzB,EAAO,qCChD/BgC,MAVf,SAAgBhD,GACZ,OAEQA,EAAM0B,OAAQ,sBAAKzB,MAAK,sBAAiBD,EAAM0B,MAAMV,KAA7B,gCAAiET,KAAK,QAAhF,UACV,iCAASP,EAAM0B,MAAMV,OADX,IAC2BhB,EAAM0B,MAAMtB,MACjD,wBAAQC,KAAK,SAASJ,MAAM,YAAY,kBAAgB,QAAQ,aAAW,cC6C5EgD,MA9Cf,WACE,MAAwBlC,mBAAS,SAAjC,mBAAOb,EAAP,KAAagD,EAAb,KACA,EAA0BnC,mBAAS,MAAnC,mBAAOW,EAAP,KAAcyB,EAAd,KACMC,EAAY,SAACC,EAAKC,GACtBH,EAAS,CACP/C,MAAOiD,EACPrC,KAAMsC,IAERC,YAAW,WACTJ,EAAS,QACR,MAgBL,OACE,qCAEE,cAACpD,EAAD,CAAQK,MAAM,YAAYF,KAAMA,EAAMO,OAjB3B,WACD,QAARP,GACFgD,EAAQ,SACRpB,SAAS0B,KAAK9C,MAAMU,gBAAkB,QACtCgC,EAAU,wBAAyB,WACnCtB,SAAS1B,MAAQ,yBAGjB0B,SAAS0B,KAAK9C,MAAMU,gBAAkB,UACtC8B,EAAQ,QACRE,EAAU,uBAAwB,WAClCtB,SAAS1B,MAAQ,0BAOjB,cAAC,EAAD,CAAQsB,MAAOA,IACf,qBAAKmB,UAAU,YAAf,SAMI,cAAC/B,EAAD,CAAUI,KAAK,6BAA6BhB,KAAMA,EAAMwB,MAAO0B,UC/B1DK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASC,eAAe,SAM1B0B,K","file":"static/js/main.14d7f318.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n\r\n\r\n    return (\r\n        <>\r\n            <nav class={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div class=\"container-fluid\">\r\n                    <a class=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\" >\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            {/* <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" to=\"/About\">About</Link>\r\n                            </li> */}\r\n                        </ul>\r\n                        <div class=\"form-check form-switch\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggle}/>\r\n                            <label class=\"form-check-label\" style={{color:props.mode==='dark'?'white':'black'}} for=\"flexSwitchCheckDefault\">{props.mode=='dark'?\"Enable Light mode\":\"Enable dark mode\"}</label>\r\n                        </div>\r\n\r\n                        <form class=\"d-flex\">\r\n                            <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\nexport default function TextForm(props) {\r\n    const [data, setData] = useState(\"Enter your text here\");\r\n    const Upper = () => {\r\n        setData(data.toUpperCase())\r\n        props.alert(\"Converted to upperCase\",\"success\")\r\n    }\r\n    const Lower = () => {\r\n        setData(data.toLowerCase())\r\n        props.alert(\"Converted to lowerCase\",\"success\")\r\n    }\r\n    const Clear = () => {\r\n        setData('')\r\n        props.alert(\"Text is Cleared\",\"success\")\r\n    }\r\n    const Trim = () => {\r\n        setData(data.trim())\r\n        props.alert(\"Text is trimed\",\"success\")\r\n    }\r\n\r\n    const Copy = () => {\r\n        var text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.alert(\"Text is copied\",\"Success\")\r\n    }\r\n    const Spaceremove = () => {\r\n        let newText = data.split(/[ ]+/);\r\n        setData(newText.join(\" \"));\r\n        props.alert(\"Space has been removed\",\"Success\")\r\n    }\r\n    const Proper = () => {\r\n        const arr = data.split(\".\");\r\n        for (var i = 0; i < arr.length; i++)\r\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1, arr[i].length);\r\n        const txt = arr.join(\".\");\r\n        setData(txt)\r\n        props.alert(\"Text is proper\",\"Success\")\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <div class=\"mb-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                    <h1>{props.head}</h1>\r\n                    <textarea class=\"form-control\" id=\"myBox\" rows=\"11\" style={{backgroundColor:props.mode==='dark'?'grey':'white'}} value={data} onChange={(e) => setData(e.target.value)}></textarea>\r\n                    <button type=\"button\" class=\"btn btn-primary mx-2\" onClick={Upper}>Convert to upperCase</button>\r\n                    <button type=\"button\" class=\"btn btn-warning mx-2\" onClick={Lower}>Convert to lowerCase</button>\r\n                    <button type=\"button\" class=\"btn btn-danger mx-2\" onClick={Clear}>Clear Text</button>\r\n                    <button type=\"button\" class=\"btn btn-success mx-2\" onClick={Trim}>Trim Text</button>\r\n                    <button type=\"button\" class=\"btn btn-secondary mx-2\" onClick={Copy}>Copy Text</button>\r\n                    <button type=\"button\" class=\"btn btn-dark mx-2\" onClick={Spaceremove}>Remove Space</button>\r\n                    <button type=\"button\" class=\"btn btn-light mx-2\" onClick={Proper}>Make proper</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h1>Tour paragraph Analyzer</h1>\r\n                <p>Your paragraph has {data.length} charecters and {data.split(\" \").filter(function(n){return n!=''}).length} words</p>\r\n                <p>Total time to read the paragraph {data.length * 0.008}</p>\r\n                <h1>Your text preview</h1>\r\n                <p >{data.length > 0 ? data : \"Enter Something to preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alerts(props) {\r\n    return (\r\n        \r\n            props.alert &&<div class={`alert alert-${props.alert.data} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.data}</strong>:{props.alert.title}\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        \r\n    )\r\n}\r\nexport default Alerts\r\n","import './App.css';\nimport Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport Alerts from './component/Alerts';\nimport { useState } from 'react';\n// import {BrowserRouter as Router,Link,Switch,Route} from 'react-router-dom';\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const showAlert = (msg, cont) => {\n    setAlert({\n      title: msg,\n      data: cont\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000)\n  }\n  const Toggle = () => {\n    if (mode == 'dark') {\n      setMode('light')\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled\", \"success\");\n      document.title = \"TextUtils-Light Mode\"\n    }\n    else {\n      document.body.style.backgroundColor = \"#0D134A\";\n      setMode('dark')\n      showAlert(\"Dark mode is enabled\", \"success\");\n      document.title = \"TextUtils-Dark Mode\"\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUTILS\" mode={mode} toggle={Toggle} />\n      <Alerts alert={alert} />\n      <div className=\"container\">\n        {/* <Switch> */}\n          {/* <Route exact path=\"/About\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm head=\"Enter your text to Analyze\" mode={mode} alert={showAlert}/>\n          {/* </Route>\n        </Switch>  */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}