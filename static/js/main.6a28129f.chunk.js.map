{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alerts.js","component/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","class","mode","to","title","type","id","role","onClick","toggle","style","color","for","placeholder","TextForm","useState","data","setData","head","rows","backgroundColor","value","onChange","e","target","disabled","length","toUpperCase","alert","toLowerCase","trim","text","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","newText","split","join","arr","i","charAt","slice","txt","className","filter","n","Alerts","height","About","Mystyle","Mystyle1","App","setMode","setAlert","showAlert","msg","cont","setTimeout","Toggle","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6a28129f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n\r\n\r\n    return (\r\n        <>\r\n            <nav class={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div class=\"container-fluid\">\r\n                    <Link class=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\" >\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                             <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" to=\"/About\">About</Link>\r\n                            </li> \r\n                        </ul>\r\n                        <div class=\"form-check form-switch\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggle}/>\r\n                            <label class=\"form-check-label\" style={{color:props.mode==='dark'?'white':'black'}} for=\"flexSwitchCheckDefault\">{props.mode=='dark'?\"Enable Light mode\":\"Enable dark mode\"}</label>\r\n                        </div>\r\n\r\n                        <form class=\"d-flex\">\r\n                            <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\nexport default function TextForm(props) {\r\n    const [data, setData] = useState(\"Enter your text here\");\r\n    const Upper = () => {\r\n        setData(data.toUpperCase())\r\n        props.alert(\"Converted to upperCase\",\"success\")\r\n    }\r\n    const Lower = () => {\r\n        setData(data.toLowerCase())\r\n        props.alert(\"Converted to lowerCase\",\"success\")\r\n    }\r\n    const Clear = () => {\r\n        setData('')\r\n        props.alert(\"Text is Cleared\",\"success\")\r\n    }\r\n    const Trim = () => {\r\n        setData(data.trim())\r\n        props.alert(\"Text is trimed\",\"success\")\r\n    }\r\n\r\n    const Copy = () => {\r\n        var text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection.removeAllRanges();\r\n        props.alert(\"Text is copied\",\"Success\")\r\n    }\r\n    const Spaceremove = () => {\r\n        let newText = data.split(/[ ]+/);\r\n        setData(newText.join(\" \"));\r\n        props.alert(\"Space has been removed\",\"Success\")\r\n    }\r\n    const Proper = () => {\r\n        const arr = data.split(\".\");\r\n        for (var i = 0; i < arr.length; i++)\r\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1, arr[i].length);\r\n        const txt = arr.join(\".\");\r\n        setData(txt)\r\n        props.alert(\"Text is proper\",\"Success\")\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <div class=\"mb-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                    <h1>{props.head}</h1>\r\n                    <textarea class=\"form-control\" id=\"myBox\" rows=\"11\" style={{backgroundColor:props.mode==='dark'?'#171C4D':'white',color:props.mode==='dark'?'white':'black'}} value={data} onChange={(e) => setData(e.target.value)}></textarea>\r\n                    <button disabled={data.length==0} type=\"button\" class=\"btn btn-primary mx-2\" onClick={Upper}>Convert to upperCase</button>\r\n                    <button disabled={data.length==0} type=\"button\" class=\"btn btn-warning mx-2\" onClick={Lower}>Convert to lowerCase</button>\r\n                    <button disabled={data.length==0} type=\"button\" class=\"btn btn-danger mx-2\" onClick={Clear}>Clear Text</button>\r\n                    <button disabled={data.length==0} type=\"button\" class=\"btn btn-success mx-2\" onClick={Trim}>Trim Text</button>\r\n                    <button disabled={data.length==0} type=\"button\" class=\"btn btn-secondary mx-2\" onClick={Copy}>Copy Text</button>\r\n                    <button disabled={data.length==0} type=\"button\" class=\"btn btn-dark mx-2\" onClick={Spaceremove}>Remove Space</button>\r\n                    <button disabled={data.length==0} type=\"button\" class=\"btn btn-light mx-2\" onClick={Proper}>Make proper</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h1>Tour paragraph Analyzer</h1>\r\n                <p>Your paragraph has {data.length} charecters and {data.split(\" \").filter(function(n){return n!=''}).length} words</p>\r\n                <p>Total time to read the paragraph {0.008 * data.split(\" \").filter(function(n){return n!=''}).length}</p>\r\n                <h1>Your text preview</h1>\r\n                <p >{data.length > 0 ? data : \"Enter Something to preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alerts(props) {\r\n    let Mystyle={\r\n        height:'70px',\r\n    }\r\n    return (\r\n            <div style={Mystyle}>\r\n           {props.alert &&<div class={`alert alert-${props.alert.data} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.data}</strong>:{props.alert.title}\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>}\r\n            </div>\r\n    )\r\n}\r\nexport default Alerts\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n  let Mystyle={\r\n      backgroundColor:props.mode==='dark'?'#0D134A':'white',\r\n      color:props.mode==='dark'?'white':'black'\r\n  }\r\n  let Mystyle1={\r\n    backgroundColor:props.mode==='dark'?'#0E1235':'white',    \r\n    color:props.mode==='dark'?'white':'black'\r\n\r\n  }\r\n    return (\r\n        <div>\r\n            <div class=\"accordion\" id=\"accordionExample\">\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"headingOne\">\r\n      <button class=\"accordion-button\" type=\"button\" style={Mystyle1} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        <strong>Analyze Your text</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div class=\"accordion-body\" style={Mystyle}>\r\n        <strong>This is a user friendly text analyzer.</strong> This will provide you the best user friendly experience to analyze your text,to make your text perfect..having lots of features it is surely best text analyzer app..\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n      <button class=\"accordion-button collapsed\" type=\"button\" style={Mystyle1} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        <strong>Free to use,</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div class=\"accordion-body\" style={Mystyle}>\r\n        <strong>Anyone can use these.</strong> User can use these app free of cost.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"headingThree\">\r\n      <button class=\"accordion-button collapsed\" type=\"button\" style={Mystyle1} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n       <strong> Browser Compatibility </strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div class=\"accordion-body\" style={Mystyle}>\r\n        <strong>Dark mode.</strong> A extra dark mode switch is available that makes it environment friendly.Users can use it without stress.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport Alerts from './component/Alerts';\nimport About from './component/About';\nimport { useState } from 'react';\n import {BrowserRouter as Router,Link,Switch,Route} from 'react-router-dom';\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const showAlert = (msg, cont) => {\n    setAlert({\n      title: msg,\n      data: cont\n    })\n     setTimeout(() => {\n       setAlert(null);\n     }, 2000)\n  }\n  const Toggle = () => {\n    if (mode == 'dark') {\n      setMode('light')\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled\", \"success\");\n      document.title = \"TextUtils-Light Mode\"\n    }\n    else {\n      document.body.style.backgroundColor = \"#0D134A\";\n      setMode('dark')\n      showAlert(\"Dark mode is enabled\", \"success\");\n      document.title = \"TextUtils-Dark Mode\"\n    }\n  }\n  return (\n    <>\n     <Router>\n      <Navbar title=\"TextUTILS\" mode={mode} toggle={Toggle} />\n      <Alerts alert={alert} />\n      <div className=\"container\">\n         <Switch> \n           <Route exact path=\"/About\">\n            <About mode={mode} toggle={Toggle}/>\n          </Route> \n           <Route exact path=\"/\"> \n          <TextForm head=\"Enter your text to Analyze\" mode={mode} alert={showAlert}/>\n           </Route>\n        </Switch>  \n      </div>\n     </Router> \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}